7. Se debe simular una maratón con C corredores donde en la llegada hay UNA máquinas
expendedoras de agua con capacidad para 20 botellas. Además existe un repositor
encargado de reponer las botellas de la máquina. Cuando los C corredores han llegado al
inicio comienza la carrera. Cuando un corredor termina la carrera se dirigen a la máquina
expendedora, espera su turno (respetando el orden de llegada), saca una botella y se retira. Si
encuentra la máquina sin botellas, le avisa al repositor para que cargue nuevamente la
máquina con 20 botellas; espera a que se haga la recarga; saca una botella y se retira. Nota:
maximizar la concurrencia; mientras se reponen las botellas se debe permitir que otros
corredores se encolen.

process corredores[id:1..C]{
    maraton.llegue();
    //Corro carrera
    maraton.fila();
    maquina.tomarAgua();
    maraton.dejeFila();
}


process repositor{
    while(true){
        maquina.reponerAgua();
    }
}

monitor maraton{

    int cant = 0;
    cond barrera;
    cond cola;
    bool libre;

    procedure llegue(){
        cant++;
        if(cant == C){
            signal_all(barrera);
            cant = 0;
        }else{
            wait(barrera)
        }
    }

    procedure fila(){
        if(!libre){
            cant++;
            wait(cola);
        }else{
            libre = false;
        }
    }

    procedure dejeFila(){
        if(cant == 0){
            libre = true;
        }else{
            signal(cola);
        }
    }
}


monitor maquina(){

    int aguas = 20;
    cond reponer, yaRepuse;


    procedure tomarAgua(){
        if(aguas == 0){
            signal(reponer);
            wait(yaRepuse);
        }
        aguas--;
    }

    procedure reponerAgua(){
        if(agua > 0){
            wait(reponer);
        }
        agua = 20;
        signal(yaRepuse);
    }
}
