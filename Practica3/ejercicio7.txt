7. Se debe simular una maratón con C corredores donde en la llegada hay UNA máquinas
expendedoras de agua con capacidad para 20 botellas. Además existe un repositor
encargado de reponer las botellas de la máquina. Cuando los C corredores han llegado al
inicio comienza la carrera. Cuando un corredor termina la carrera se dirigen a la máquina
expendedora, espera su turno (respetando el orden de llegada), saca una botella y se retira. Si
encuentra la máquina sin botellas, le avisa al repositor para que cargue nuevamente la
máquina con 20 botellas; espera a que se haga la recarga; saca una botella y se retira. Nota:
maximizar la concurrencia; mientras se reponen las botellas se debe permitir que otros
corredores se encolen. 


process corredor[id: 1..C]{
    maraton.llegue();
    //correr maraton
    maraton.fila();
    maquina.tomarAgua();
    maraton.yaTome();
}

process repositor{
    while(true){
        maquina.reponer();
    }
}


monitor maraton{
    int cantLlegados = 0;
    cond barrera;
    cond condAgua;
    int esperando = 0;
    bool libre = true;
    int cantAguas = 20;
    cond repositor, yaRepuso;

    procedure llegue(){
        cantLlegados++;
        if(cantLlegados == C){
            signal_all(barrera);
        }else{
            wait(barrera);
        }
    }

    procedure fila(){
        int auxId;
        if(!libre){
            esperando++;
            wait(condAgua);
            esperando--;
        }else{
            libre = false;
        }
    }

    procedure yaTome(){
        if(esperando > 0){
            signal(condAgua);
        }else{
            libre = true;
        }
    } 
}

monitor maquina{
    int cantAguas = 20;
    cond repositor, yaRepuso;

    process tomarAgua(){
        if(cantAguas == 0){
            signal(repositor);
            wait(yaRepuso);
        }
        cantAguas--;
    }

    process reponer(){
        if(cantAguas > 0){
            wait(repositor);
        }
        cantAguas = 20;
        signal(yaRepuso);
    }

}