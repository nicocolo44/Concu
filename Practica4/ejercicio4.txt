4. Simular la atención en un locutorio con 10 cabinas telefónicas, que tiene un empleado que
se encarga de atender a los clientes. Hay N clientes que al llegar esperan hasta que el
empleado les indica a que cabina ir, la usan y luego se dirigen al empleado para pagarle. El
empleado atiende a los clientes en el orden en que hacen los pedidos, pero siempre dando
prioridad a los que terminaron de usar la cabina. Nota: maximizar la concurrencia; suponga
que hay una función Cobrar() llamada por el empleado que simula que el empleado le cobra
al cliente.



process cliente[id: 1..C]{
    send cola(id);
    receive cabinaAUsar[id](cab);
    Llamar();
    send cobrame(id, cab);
    receive yaCobraste[id](?);
}


process empleado{
    bool cabinas[1..10] = true;
    while(true){
        libre = cabinaLibre(cabinas);
        if(not empty(cola) && empty(cobrame) && cabinaLibre !== -1){
            receive cola(auxId);
            send cabinaAUsar[auxId] = libre;
        }
        if(not empty(cobrame)){
            receive cobrame(auxId, cab)
            cabinas[cab] = true;
            Cobrar(auxId);
            send yaCobraste[auxId]();
        }
    }
}