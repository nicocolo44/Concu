8. Resolver con PMS (Pasaje de Mensajes SINCRÓNICOS) el siguiente problema. En un
examen final hay P alumnos y 3 profesores. Cuando todos los alumnos han llegado
comienza el examen. Cada alumno resuelve su examen, lo entrega y espera a que alguno de
los profesores lo corrija y le indique la nota. Los profesores corrigen los exámenes
respectando el orden en que los alumnos van entregando. Nota: maximizar la concurrencia
y no generar demora innecesaria.


process barrera{
    for(i:1..P){
        persona[*]?llegue();
    }
    for(i..P){
        persona[i]!liberar();
    }
}

process persona[id: 1..P]{
    barrera!llegue();
    barrera?liberar();
    //Hago examen
    admin!entregue(id, examen)
    profesor[*]?esperarNota(nota);
}

process admin{
    cola examenes;
    do persona[*]?entregue(auxId, auxExamen) => examenes.push(auxId, auxExamen);
       not empty(examenes); profesor[*]?profeListo(auxId) => profesor[auxId]!paraCorregir(auxId, auxExamen)
}


process profesor[id:1..3]{
    while(true){
        admin!profeListo(id)
        admin?paraCorregir(auxId, auxExamen)
        //Corrijo examen
        persona[auxId]!esperarNota(nota):
    }
}